CREATE OR REPLACE PACKAGE Pkg_Gdelt IS
   -- Author  : 43395132   -- Created : 4/9/2017 9:46:35 AM   -- Purpose : Gdelt Model run
   -- Public function and procedure declarations   PROCEDURE p_Load_Distinct_Names;
   PROCEDURE p_Compare_Wl_Names;
   PROCEDURE p_Compare_Pseudo_Wl_Names;
   PROCEDURE p_Compare_Snctn_Cntries;
   PROCEDURE p_Compute_Scores;
END Pkg_Gdelt;/CREATE OR REPLACE PACKAGE BODY Pkg_Gdelt IS
   PROCEDURE p_Load_Distinct_Names IS   BEGIN      -- Let me Truncate for testing      EXECUTE IMMEDIATE 'TRUNCATE TABLE Gdelt_Unique_Relationships';      INSERT INTO Gdelt_Unique_Relationships         (Alert_Name, Relationship_Name, Name_Count)         SELECT Alert_Name, Name_a, Name_Count           FROM Gdelt_Relationship          WHERE Name_Count IS NOT NULL            AND Alert_Name != Name_a         UNION         SELECT Alert_Name, Name_b, Name_Count           FROM Gdelt_Relationship          WHERE Name_Count IS NOT NULL            AND Alert_Name != Name_b;      Dbms_Output.Put_Line('Loaded : ' || SQL%ROWCOUNT || ' Distinct Records.');      COMMIT;      END p_Load_Distinct_Names;
   PROCEDURE p_Compare_Wl_Names IS   BEGIN      EXECUTE IMMEDIATE 'TRUNCATE TABLE GDELT_MATCH_SDN_LIST';         INSERT INTO Gdelt_Match_Sdn_List         (Alert_Name, Wl_Name)         SELECT DISTINCT Alert_Name, Wl_Name           FROM Gdelt_Unique_Relationships, Gdelt_Sdn_List          WHERE Relationship_Name = Wl_Name;         Dbms_Output.Put_Line('Loaded : ' || SQL%ROWCOUNT || ' Alerts whose Unique Names match with Watch List.');         INSERT INTO Gdelt_Match_Sdn_List         (Alert_Name, Wl_Name)         SELECT DISTINCT Alert_Name, Wl_Name           FROM Gdelt_Unique_Relationships Gu, Gdelt_Sdn_List Sl          WHERE Alert_Name = Wl_Name            AND NOT EXISTS (SELECT 1                   FROM Gdelt_Match_Sdn_List Gm                  WHERE Gm.Alert_Name = Gu.Alert_Name                    AND Sl.Wl_Name = Gm.Wl_Name);         Dbms_Output.Put_Line('Loaded : ' || SQL%ROWCOUNT || ' Unique List whose Alert Names match with Watch List.');         INSERT INTO Gdelt_Match_Sdn_List         (Alert_Name, Wl_Name)         SELECT DISTINCT Alert_Name, Wl_Name           FROM Gdelt_Alert_Names Gu, Gdelt_Sdn_List Sl          WHERE Alert_Name = Wl_Name            AND NOT EXISTS (SELECT 1                   FROM Gdelt_Match_Sdn_List Gm                  WHERE Gm.Alert_Name = Gu.Alert_Name                    AND Sl.Wl_Name = Gm.Wl_Name);         Dbms_Output.Put_Line('Loaded : ' || SQL%ROWCOUNT || ' Alerts whose Alert Names match with Watch List.');         -- Match the Unique Names with the Alert Name and capture those alerts         INSERT INTO Gdelt_Match_Sdn_List         (Alert_Name, Wl_Name)         SELECT Alert_Name, Relationship_Name           FROM Gdelt_Unique_Relationships Src          WHERE EXISTS (SELECT 1 FROM Gdelt_Unique_Relationships Trg WHERE Trg.Relationship_Name = Src.Alert_Name);         Dbms_Output.Put_Line('Loaded : ' || SQL%ROWCOUNT ||                           ' Alerts whose Unique Relationship Name matches with Alert_Name (Find internal Pattern).');         COMMIT;   END p_Compare_Wl_Names;
   PROCEDURE p_Compare_Pseudo_Wl_Names IS   BEGIN      -- Match the Pseudo Names with Watch List and then Pseudo Names with the Unique Names      INSERT INTO Gdelt_Match_Sdn_List         (Alert_Name, Wl_Name)         SELECT DISTINCT Alert_Name, Wl_Name           FROM Gdelt_Alert_Pseudo_Map Pm, Gdelt_Sdn_List Sl          WHERE Pm.Pseudo_Cust_Name = Sl.Wl_Name;      Dbms_Output.Put_Line('Loaded ' || SQL%ROWCOUNT || ' Records with Pseudo Names match to Watch List.');         INSERT INTO Gdelt_Match_Sdn_List         (Alert_Name, Wl_Name)         SELECT DISTINCT Pm.Alert_Name, Relationship_Name           FROM Gdelt_Alert_Pseudo_Map Pm, Gdelt_Unique_Relationships Sl          WHERE Pm.Pseudo_Cust_Name = Sl.Relationship_Name;         Dbms_Output.Put_Line('Loaded ' || SQL%ROWCOUNT || ' Records with Pseudo Names match Unique Names');         COMMIT;   END p_Compare_Pseudo_Wl_Names;
   PROCEDURE p_Compare_Snctn_Cntries IS   BEGIN      -- Match the New Locations to Sanctioned Countries         INSERT INTO Gdelt_Match_Scnt_Cntries         (Alert_Name, News_Url, Tone, News_Location)         SELECT Alert_Name, News_Url, Tone, News_Location           FROM Gdelt_Tone_Location, Gdelt_Sanc_Cntries          WHERE News_Location LIKE '%' || Cntr_Name || '%';         Dbms_Output.Put_Line('Loaded : ' || SQL%ROWCOUNT || ' Records that match with Sanctioned Countries.');      -- Get the Country Names from the Wire Data from Source and Compare with Santioned Countries      COMMIT;   END p_Compare_Snctn_Cntries;
   PROCEDURE p_Compute_Scores IS   BEGIN      EXECUTE IMMEDIATE 'Truncate table Gdelt_Work_Scores';      EXECUTE IMMEDIATE 'Truncate table Gdelt_Alert_Scores';         INSERT INTO Gdelt_Work_Scores         (Alert_Name, Score)         SELECT Alert_Name, COUNT(1) * 10 FROM Gdelt_Match_Scnt_Cntries GROUP BY Alert_Name;         Dbms_Output.Put_Line('Loaded ' || SQL%ROWCOUNT || ' Records with Sanctioned Countries into Work.');         INSERT INTO Gdelt_Work_Scores         (Alert_Name, Score)         SELECT Alert_Name, COUNT(1) * 15 FROM Gdelt_Match_Sdn_List GROUP BY Alert_Name;         Dbms_Output.Put_Line('Loaded ' || SQL%ROWCOUNT || ' Records with Watch List.');         -- Calculate the Final Scores         INSERT INTO Gdelt_Alert_Scores         (Alert_Name, Score)         SELECT Ws.Alert_Name, SUM(DISTINCT Base_Alert_Score) + SUM(Score) Final_Score           FROM Gdelt_Work_Scores Ws, Gdelt_Alert_Names Ga          WHERE Ws.Alert_Name = Ga.Alert_Name          GROUP BY Ws.Alert_Name;         Dbms_Output.Put_Line('Loaded ' || SQL%ROWCOUNT ||                           ' Final Scores which have matches to Sanctioned or Watch List.');         INSERT INTO Gdelt_Alert_Scores         (Alert_Name, Score)         SELECT Alert_Name, Base_Alert_Score           FROM Gdelt_Alert_Names Gs          WHERE NOT EXISTS (SELECT 1 FROM Gdelt_Alert_Scores Gas WHERE Gas.Alert_Name = Gs.Alert_Name);      Dbms_Output.Put_Line('Loaded ' || SQL%ROWCOUNT || ' All other Alerts that did not match.');      COMMIT;      END p_Compute_Scores;
END Pkg_Gdelt;/
